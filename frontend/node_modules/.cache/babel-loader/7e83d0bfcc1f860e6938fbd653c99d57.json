{"ast":null,"code":"var _jsxFileName = \"/Users/aroyehunoluwasegun/Downloads/proxy-storeIssue/frontend/src/Components/store/actions/appContext.js\";\nimport React, { useState, useEffect } from 'react';\nimport getState from './actions'; // THE ONLY THING WAS EXPORTED HERE IS THIS \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/React.createContext(); // THE ONLY THING WAS EXPORTED HERE IS THIS \n// export const Context = React.createContext( {} );\n// const injectContext = PassedComponent => {\n//   const StoreWrapper = props => {\n//     const [state, setState] = useState(getState({getStore, getActions, setStore}));\n//     const setStore = updatedStore =>\n//       setState(Object.assign({}, state, updatedStore));\n//     const getStore = () => state;\n//     const getActions = () => state.actions;\n//     useEffect(() => {\n//       state.actions.getCharacters();\n//     }, []);\n//     return (\n//       <Context.Provider value={{store: state, actions: {...state.actions}}}>\n//         <PassedComponent {...props} />\n//       </Context.Provider>\n//     );\n//   };\n//   return StoreWrapper;\n// };\n// export default injectContext;\n\nconst injectContext = PassedComponent => {\n  var _s = $RefreshSig$();\n\n  const StoreWrapper = props => {\n    _s();\n\n    const [state, setState] = useState(getState({\n      getStore: () => state.store,\n      getActions: () => state.actions,\n      setStore: updatedStore => setState({\n        store: Object.assign(state.store, updatedStore),\n        actions: { ...state.actions\n        }\n      })\n    }));\n    useEffect(() => {\n      state.actions.loadSomeData(); // state.actions.syncTokenFromSessionStore().\n    }, [state.actions]);\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: state,\n      children: /*#__PURE__*/_jsxDEV(PassedComponent, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(StoreWrapper, \"+L8JsjwuDCrcI0fdHbdGT+umN7U=\");\n\n  return StoreWrapper;\n};\n\nexport default injectContext; // import React, { useState, useEffect } from 'react';\n// import getState from './flux';\n// export const Context = React.createContext(null);\n// const injectContext = PassedComponent => {\n//     const StoreWrapper = props => {\n//         const [state, setState] = useState(getState({ setStore, getStore }));\n//         const setStore = updatedStore =>\n//             setState(Object.assign({}, state, updatedStore));\n//         const getStore = () => state;\n//         useEffect(() => {\n//             state.actions.loadSomeData();\n//         }, []);\n//         return (\n//             <Context.Provider value={{ store: state, actions: { ...state.actions } }}>\n//                 <PassedComponent {...props} />\n//             </Context.Provider>\n//         );\n//     };\n//     return StoreWrapper;\n// };\n// export default injectContext;\n// const [state, setState] = useState(getState({getStore, getActions, setStore}));\n// const [store, setStore] = useState(state.store);\n// const [actions, setActions] = useState(state.actions);\n// useEffect(() => {\n//   state.actions.getInitialData();\n// }, []);\n// const getStore = () => {\n//   return store;\n// };\n// const getActions = () => {\n//   return actions;\n// };\n// return (\n//   <Context.Provider value={{store, actions}}>\n//     <PassedComponent {...props} />\n//   </Context.Provider>\n// );\n//   };\n//   return StoreWrapper;\n// };\n// export default injectContext;","map":{"version":3,"names":["React","useState","useEffect","getState","Context","createContext","injectContext","PassedComponent","StoreWrapper","props","state","setState","getStore","store","getActions","actions","setStore","updatedStore","Object","assign","loadSomeData"],"sources":["/Users/aroyehunoluwasegun/Downloads/proxy-storeIssue/frontend/src/Components/store/actions/appContext.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport getState from './actions';\n\n\n\n// THE ONLY THING WAS EXPORTED HERE IS THIS \nexport const Context = React.createContext();\n// THE ONLY THING WAS EXPORTED HERE IS THIS \n\n\n// export const Context = React.createContext( {} );\n\n\n// const injectContext = PassedComponent => {\n//   const StoreWrapper = props => {\n//     const [state, setState] = useState(getState({getStore, getActions, setStore}));\n\n//     const setStore = updatedStore =>\n//       setState(Object.assign({}, state, updatedStore));\n\n//     const getStore = () => state;\n\n//     const getActions = () => state.actions;\n\n//     useEffect(() => {\n//       state.actions.getCharacters();\n//     }, []);\n\n//     return (\n//       <Context.Provider value={{store: state, actions: {...state.actions}}}>\n//         <PassedComponent {...props} />\n//       </Context.Provider>\n//     );\n//   };\n//   return StoreWrapper;\n\n\n// };\n\n// export default injectContext;\n\nconst injectContext = PassedComponent => {\n  const StoreWrapper = props => {\n    const [state, setState] = useState(\n        getState({\n            getStore: () => state.store,\n            getActions: () => state.actions,\n            setStore: updatedStore =>\n                setState({\n                    store: Object.assign(state.store, updatedStore),\n                    actions: {...state.actions}\n                })\n        })\n    );\n\n    useEffect(() => {\n        state.actions.loadSomeData();\n        // state.actions.syncTokenFromSessionStore().\n    }, [state.actions]);\n\n    return (\n        <Context.Provider value={state}>\n            <PassedComponent {...props} />\n        </Context.Provider>\n    );\n};\nreturn StoreWrapper;\n};\n\n\n\nexport default injectContext;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import getState from './flux';\n\n// export const Context = React.createContext(null);\n\n// const injectContext = PassedComponent => {\n//     const StoreWrapper = props => {\n//         const [state, setState] = useState(getState({ setStore, getStore }));\n\n//         const setStore = updatedStore =>\n//             setState(Object.assign({}, state, updatedStore));\n\n//         const getStore = () => state;\n\n//         useEffect(() => {\n//             state.actions.loadSomeData();\n//         }, []);\n\n//         return (\n//             <Context.Provider value={{ store: state, actions: { ...state.actions } }}>\n//                 <PassedComponent {...props} />\n//             </Context.Provider>\n//         );\n//     };\n//     return StoreWrapper;\n// };\n\n// export default injectContext;\n\n\n \n    // const [state, setState] = useState(getState({getStore, getActions, setStore}));\n    // const [store, setStore] = useState(state.store);\n    // const [actions, setActions] = useState(state.actions);\n\n    // useEffect(() => {\n    //   state.actions.getInitialData();\n    // }, []);\n\n    // const getStore = () => {\n    //   return store;\n    // };\n\n    // const getActions = () => {\n    //   return actions;\n    // };\n\n    // return (\n    //   <Context.Provider value={{store, actions}}>\n    //     <PassedComponent {...props} />\n    //   </Context.Provider>\n    // );\n//   };\n//   return StoreWrapper;\n// };\n\n// export default injectContext;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAIA;;;AACA,OAAO,MAAMC,OAAO,gBAAGJ,KAAK,CAACK,aAAN,EAAhB,C,CACP;AAGA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;AAEA,MAAMC,aAAa,GAAGC,eAAe,IAAI;EAAA;;EACvC,MAAMC,YAAY,GAAGC,KAAK,IAAI;IAAA;;IAC5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAC9BE,QAAQ,CAAC;MACLS,QAAQ,EAAE,MAAMF,KAAK,CAACG,KADjB;MAELC,UAAU,EAAE,MAAMJ,KAAK,CAACK,OAFnB;MAGLC,QAAQ,EAAEC,YAAY,IAClBN,QAAQ,CAAC;QACLE,KAAK,EAAEK,MAAM,CAACC,MAAP,CAAcT,KAAK,CAACG,KAApB,EAA2BI,YAA3B,CADF;QAELF,OAAO,EAAE,EAAC,GAAGL,KAAK,CAACK;QAAV;MAFJ,CAAD;IAJP,CAAD,CADsB,CAAlC;IAYAb,SAAS,CAAC,MAAM;MACZQ,KAAK,CAACK,OAAN,CAAcK,YAAd,GADY,CAEZ;IACH,CAHQ,EAGN,CAACV,KAAK,CAACK,OAAP,CAHM,CAAT;IAKA,oBACI,QAAC,OAAD,CAAS,QAAT;MAAkB,KAAK,EAAEL,KAAzB;MAAA,uBACI,QAAC,eAAD,OAAqBD;MAArB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH,CAvBC;;EADuC,GACjCD,YADiC;;EAyBzC,OAAOA,YAAP;AACC,CA1BD;;AA8BA,eAAeF,aAAf,C,CAIA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAII;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}