{"ast":null,"code":"var _jsxFileName = \"/Users/aroyehunoluwasegun/Downloads/proxy-storeIssue/frontend/src/Components/store/actions/appContext.js\";\nimport React, { useState, useEffect } from 'react';\nimport getState from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/React.createContext();\n\nconst injectContext = PassedComponent => {\n  var _s = $RefreshSig$();\n\n  const StoreWrapper = props => {\n    _s();\n\n    const [state, setState] = useState(getState({\n      getStore: () => state.store,\n      getActions: () => state.actions,\n      setStore: updatedStore => setState({\n        store: Object.assign(state.store, updatedStore),\n        actions: { ...state.actions\n        }\n      })\n    }));\n    useEffect(() => {\n      state.actions.loadSomeData();\n      state.actions.syncTokenFromSessionStore();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: state,\n      children: /*#__PURE__*/_jsxDEV(PassedComponent, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(StoreWrapper, \"+L8JsjwuDCrcI0fdHbdGT+umN7U=\");\n\n  return StoreWrapper;\n};\n\nexport default injectContext;","map":{"version":3,"names":["React","useState","useEffect","getState","Context","createContext","injectContext","PassedComponent","StoreWrapper","props","state","setState","getStore","store","getActions","actions","setStore","updatedStore","Object","assign","loadSomeData","syncTokenFromSessionStore"],"sources":["/Users/aroyehunoluwasegun/Downloads/proxy-storeIssue/frontend/src/Components/store/actions/appContext.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport getState from './actions';\n\n\n\nexport const Context = React.createContext();\n\nconst injectContext = PassedComponent => {\n  const StoreWrapper = props => {\n    const [state, setState] = useState(\n        getState({\n            getStore: () => state.store,\n            getActions: () => state.actions,\n            setStore: updatedStore =>\n                setState({\n                    store: Object.assign(state.store, updatedStore),\n                    actions: {...state.actions}\n                })\n        })\n    );\n\n    useEffect(() => {\n        state.actions.loadSomeData();\n        state.actions.syncTokenFromSessionStore();\n    }, []);\n\n    return (\n        <Context.Provider value={state}>\n            <PassedComponent {...props} />\n        </Context.Provider>\n    );\n};\nreturn StoreWrapper;\n};\n\nexport default injectContext;\n\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAIA,OAAO,MAAMC,OAAO,gBAAGJ,KAAK,CAACK,aAAN,EAAhB;;AAEP,MAAMC,aAAa,GAAGC,eAAe,IAAI;EAAA;;EACvC,MAAMC,YAAY,GAAGC,KAAK,IAAI;IAAA;;IAC5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAC9BE,QAAQ,CAAC;MACLS,QAAQ,EAAE,MAAMF,KAAK,CAACG,KADjB;MAELC,UAAU,EAAE,MAAMJ,KAAK,CAACK,OAFnB;MAGLC,QAAQ,EAAEC,YAAY,IAClBN,QAAQ,CAAC;QACLE,KAAK,EAAEK,MAAM,CAACC,MAAP,CAAcT,KAAK,CAACG,KAApB,EAA2BI,YAA3B,CADF;QAELF,OAAO,EAAE,EAAC,GAAGL,KAAK,CAACK;QAAV;MAFJ,CAAD;IAJP,CAAD,CADsB,CAAlC;IAYAb,SAAS,CAAC,MAAM;MACZQ,KAAK,CAACK,OAAN,CAAcK,YAAd;MACAV,KAAK,CAACK,OAAN,CAAcM,yBAAd;IACH,CAHQ,EAGN,EAHM,CAAT;IAKA,oBACI,QAAC,OAAD,CAAS,QAAT;MAAkB,KAAK,EAAEX,KAAzB;MAAA,uBACI,QAAC,eAAD,OAAqBD;MAArB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH,CAvBC;;EADuC,GACjCD,YADiC;;EAyBzC,OAAOA,YAAP;AACC,CA1BD;;AA4BA,eAAeF,aAAf"},"metadata":{},"sourceType":"module"}